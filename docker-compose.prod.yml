services:

  db:
    image: mysql:latest

    restart: on-failure

    ports:
      - '8001:3306'

    env_file:
      - .env

    volumes:
      - ./rti-db:/var/lib/mysql/
      - ./sql/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql

    networks:
      - backend

  # cloudflare api key valid until 04/12/2024
  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    restart: always
    env_file:
      - .env

  bot:

    build:
      context: .
      dockerfile: ./bot/Dockerfile
      target: primary

    env_file:
      - .env

    networks:
      - backend

    depends_on:
      - db

    restart: on-failure

  api:

    build:
      context: .
      dockerfile: ./api/Dockerfile

    depends_on:
      - db
      - cloudflare-ddns

    env_file:
      - .env

    ports:
      - 80:80

    labels:
      - traefik.enable=true
      - traefik.http.services.app.loadbalancer.server.port=80
      - traefik.http.routers.app-http.entrypoints=http
      - traefik.http.routers.app-http.rule=Host(`rti.alexcingolani.dev`)

      - traefik.docker.network=traefik-public
      - traefik.http.routers.app-https.entrypoints=https
      - traefik.http.routers.app-https.rule=Host(`rti.alexcingolani.dev`)
      - traefik.http.routers.app-https.tls=true
      - traefik.http.routers.app-https.tls.certresolver=le

      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      - traefik.routers.app-http.middlewares=https-redirect

    networks:
      - backend
      - traefik-public

    restart: on-failure

volumes:
  rti-db:


networks:

  backend:
    driver: bridge

  traefik-public:
    external: true
